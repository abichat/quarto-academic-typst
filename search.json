[
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "Libertinus supports several OpenType features. Some are enabled by default (-) others have to be opted in (+).\n\nSmall Caps: +smcp and +c2sc\nLigatures and Contextual Alternates: -liga, +hlig, +dlig; -calt\nKerning: -kern\nCapital Spacing: +cpsp, case\nSlashed zero: +zero\nNumerals: -tnum, +pnum, -lnum, +onum, +pnum+onum\nVulgar fractions: +frac\nSubscripts and Superscripts: +sinf, +sups\nDiacritic marks: -mark, -mkmk\nStylistic alternates: +salt\n\nMost of these can be accessed by high-level CSS properties or values and by GUI controls in DTP software.\n\n\nAll digits and some punctuation characters (i.e. parentheses, guillemets and hyphen) use shapes that better fit with all-uppercase text (.cap or .sc).\n\n\n\nIn serif faces, the Latin lowercase letter sequences ſſ, ſſi, ſſj, ſſk, ſſl, ſh, ſi, ſj, ſl, ſs, ſt, ff, ffh, ffi, ffj, ffk, ffl, fh, fi, fj, fk, fl, ft form default ligatures.\nIn sans-serif faces, only the Latin lowercase letter sequences ff (also if the second one has a shortened head) and ft form default ligatures.\nThe related feature clig is not used.\nThe respective CSS property is font-variant-ligatures with the value common-ligatures (or no-common-ligatures).\n\n\n\nThe only historical ligatures supported are Latin lowercase st and ct in all faces.\nIn all faces, Latin lowercase letter sequences tt and tz form discretionary ligatures. Only in serif faces (i.e. non-sans-serif), Latin letter sequences Th, ck and ch also form discretionary ligatures. These can all be manually forced by using ZWJ (U+200D) between letters when just the default feature liga is active.\nThe respective CSS property is font-variant-ligatures with the values discretionary-ligatures and historical-ligatures.\n\n\n\nIn all faces, the Latin capital and small-capital letter Q gains a long tail if followed by either lowercase or small-capital letter u or v.\nThe Latin lowercase letter f, even when part of the ligature ff, has a shortened head if followed by closing parentheses, top quotation mark, lowercase letter with ascending left leg, lowercase letter with diacritic mark above or uppercase letter not starting with a leg or stem on the left.\nThe related feature clig is not used.\nThe respective CSS property is font-variant-ligatures with the value contextual (or no-contextual).\n\n\n\nFor Serbian and Macedonian, in all faces, the Cyrillic lowercase letter be б and in italic faces, the Cyrillic lowercase letters ghe г, gje ѓ, de д, pe п and te т are replaced by alternate glyphs.\nFor Scandinavian languages, because of preferences in Sami typography, the Latin uppercase letter Eng Ŋ uses a alternative glyph, cf. ss07.\nFor Turkic languages, ligatures where the Latin lowercase letter i is the second part are deactivated, i.e. fi, ffi, ſi and ſſi. The small-capitals handling of i / ı does not depend on locl, but is part of smcp (and c2sc).\n\n\n\nExcept for Libertinus Math, the standard digits can be forced to old-style forms (with ascenders and descenders) with onum (.taboldstyle), to default lining forms with lnum, to proportional forms with pnum (.fitted), to tabular (fixed-width) forms with tnum. The latter two also apply to Euro € and Yen ¥ currency symbols and trump the other features.\nThe respective CSS property is font-variant-numeric with the values oldstyle-nums, lining-nums, proportional-nums and tabular-nums, respectively.\n\n\n\nThe same sets of inferior/subscript and superior/superscript glyphs are used for various features.\nThe respective CSS property for frac is font-variant-numeric with the value diagonal-fractions. The value stacked-fraction is not supported."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#cased-forms-case",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#cased-forms-case",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "All digits and some punctuation characters (i.e. parentheses, guillemets and hyphen) use shapes that better fit with all-uppercase text (.cap or .sc)."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#standard-ligatures--liga",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#standard-ligatures--liga",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "In serif faces, the Latin lowercase letter sequences ſſ, ſſi, ſſj, ſſk, ſſl, ſh, ſi, ſj, ſl, ſs, ſt, ff, ffh, ffi, ffj, ffk, ffl, fh, fi, fj, fk, fl, ft form default ligatures.\nIn sans-serif faces, only the Latin lowercase letter sequences ff (also if the second one has a shortened head) and ft form default ligatures.\nThe related feature clig is not used.\nThe respective CSS property is font-variant-ligatures with the value common-ligatures (or no-common-ligatures)."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#discretionary-and-historical-ligatures-dlig-hlig",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#discretionary-and-historical-ligatures-dlig-hlig",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "The only historical ligatures supported are Latin lowercase st and ct in all faces.\nIn all faces, Latin lowercase letter sequences tt and tz form discretionary ligatures. Only in serif faces (i.e. non-sans-serif), Latin letter sequences Th, ck and ch also form discretionary ligatures. These can all be manually forced by using ZWJ (U+200D) between letters when just the default feature liga is active.\nThe respective CSS property is font-variant-ligatures with the values discretionary-ligatures and historical-ligatures."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#contextual-alternates--calt",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#contextual-alternates--calt",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "In all faces, the Latin capital and small-capital letter Q gains a long tail if followed by either lowercase or small-capital letter u or v.\nThe Latin lowercase letter f, even when part of the ligature ff, has a shortened head if followed by closing parentheses, top quotation mark, lowercase letter with ascending left leg, lowercase letter with diacritic mark above or uppercase letter not starting with a leg or stem on the left.\nThe related feature clig is not used.\nThe respective CSS property is font-variant-ligatures with the value contextual (or no-contextual)."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#localized-alternates-locl",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#localized-alternates-locl",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "For Serbian and Macedonian, in all faces, the Cyrillic lowercase letter be б and in italic faces, the Cyrillic lowercase letters ghe г, gje ѓ, de д, pe п and te т are replaced by alternate glyphs.\nFor Scandinavian languages, because of preferences in Sami typography, the Latin uppercase letter Eng Ŋ uses a alternative glyph, cf. ss07.\nFor Turkic languages, ligatures where the Latin lowercase letter i is the second part are deactivated, i.e. fi, ffi, ſi and ſſi. The small-capitals handling of i / ı does not depend on locl, but is part of smcp (and c2sc)."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#numerals--tnum-pnum--lnum-onum-pnumonum",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#numerals--tnum-pnum--lnum-onum-pnumonum",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "Except for Libertinus Math, the standard digits can be forced to old-style forms (with ascenders and descenders) with onum (.taboldstyle), to default lining forms with lnum, to proportional forms with pnum (.fitted), to tabular (fixed-width) forms with tnum. The latter two also apply to Euro € and Yen ¥ currency symbols and trump the other features.\nThe respective CSS property is font-variant-numeric with the values oldstyle-nums, lining-nums, proportional-nums and tabular-nums, respectively."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#vulgar-fractions-frac-subs-sups-sinf",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#vulgar-fractions-frac-subs-sups-sinf",
    "title": "Standard OpenType Font Features",
    "section": "",
    "text": "The same sets of inferior/subscript and superior/superscript glyphs are used for various features.\nThe respective CSS property for frac is font-variant-numeric with the value diagonal-fractions. The value stacked-fraction is not supported."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-alternates-salt",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-alternates-salt",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic alternates: +salt",
    "text": "Stylistic alternates: +salt\nFor non-sans-serif faces, Latin uppercase letters J, K, R and W use alternate glyphs (.alt).\nFor small-caps faces, Latin lowercase letters a, q, ŋ and ß use alternate glyphs (.scalt etc.).\nIn all faces, Latin uppercase letters Q, eng Ŋ and eszet ẞ, Latin lowercase letters h, y and Eszet ß, Greek lowercase letters Beta β, Theta θ, Kappa κ and Phi φ, Cyrillic lowercase letter Be б and the ampersand & use alternate glyphs, cf. calt, ss03, ss04, ss06, ss07, locl.\nThe respective CSS property is font-variant-alternates with the value stylistic(&lt;feature-value-name&gt;)."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-1-ss01-low-diaeresis-on-a-e-o",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-1-ss01-low-diaeresis-on-a-e-o",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic Set 1 ss01 Low diaeresis on ‘A’, ‘E’, ‘O’",
    "text": "Stylistic Set 1 ss01 Low diaeresis on ‘A’, ‘E’, ‘O’\nIntended for German, the umlaut dots above the Latin capital letters A and O (Ä, Ö) are moved further apart while the ones above U (Ü) are put closer together."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-2-ss02-swashy-j-k-r",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-2-ss02-swashy-j-k-r",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic Set 2 ss02 Swashy ‘J’ ‘K’ ‘R’",
    "text": "Stylistic Set 2 ss02 Swashy ‘J’ ‘K’ ‘R’\nA bit more swashy, cursive look with elongated tails for Latin uppercase letter K and R and a left-hand horizontal top for J. This does not apply to sans-serif faces."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-3-ss03-double-s-to-two-s",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-3-ss03-double-s-to-two-s",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic Set 3 ss03 ‘double s’ to two ‘s’",
    "text": "Stylistic Set 3 ss03 ‘double s’ to two ‘s’\nAll variants of German eszett (lowercase ß, uppercase ẞ and small-capital) are rendered as round-s digraphs SS/ss instead, very applicable to Swiss German texts."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-4-ss04-upper-case-double-s-to-two-s",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-4-ss04-upper-case-double-s-to-two-s",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic Set 4 ss04 Upper case ‘double s’ to two ‘S’",
    "text": "Stylistic Set 4 ss04 Upper case ‘double s’ to two ‘S’\nOnly the uppercase German eszett ẞ is rendered as a round-s digraph SS; subset of ss03."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-5-ss05-crossed-w",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-5-ss05-crossed-w",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic Set 5 ss05 Crossed ‘W’",
    "text": "Stylistic Set 5 ss05 Crossed ‘W’\nLatin uppercase letter W is rendered as a ligature of two V, i.e. the middle verticals are longer, as used in the Wikipedia logo. This does not apply to sans-serif faces."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-6-ss06-swash",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-6-ss06-swash",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic Set 6 ss06 Swash ‘&’",
    "text": "Stylistic Set 6 ss06 Swash ‘&’\nThe ampersand & is rendered as an et ligature."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-7-ss07-swap-eng-forms",
    "href": "static/fonts/Libertinus-7.051/documentation/Features.html#stylistic-set-7-ss07-swap-eng-forms",
    "title": "Standard OpenType Font Features",
    "section": "Stylistic Set 7 ss07 Swap ‘Eng’ forms",
    "text": "Stylistic Set 7 ss07 Swap ‘Eng’ forms\nThe uppercase letter Eng Ŋ, i.e. an N with a descending tail on the right leg, uses the capital N glyph as its base instead of the default enlarged lowercase n glyph. The localized locl UC Style for Sami is changed the other way around."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html",
    "href": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html",
    "title": "Libertinus design guidelines",
    "section": "",
    "text": "Libertinus design guidelines\n\nDesign principles\n\nThe perfection of the imperfect\nThe styles of Libertinus\nThe serifs of Libertinus\n\nThe foot serifs\nThe middle head serifs (at x-height)\nThe ascender serifs (at ascender height)\nThe half serifs\nThe drop terminals\n\nTwo letters as primary design patterns …\n\n… n for letters with serifs\n… o for letters with round parts\n\nSecondary design patterns\nVertical metrics\nSpacing and tracking\nOvershoot and height metrics\n\nFontForge font editor\n\nHow the sources are organized\nThe layers\nDrawing splines and contours\nAccented glyphs\n\nWorking with references\nBase marks and anchors\n\n\nAuthors"
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html#design-principles",
    "href": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html#design-principles",
    "title": "Libertinus design guidelines",
    "section": "Design principles",
    "text": "Design principles\nThe shape of each letter is a social convention, usually a very old one. For example, the Latin alphabet was derived from Roman letters, those were based on Greek letters, which in turn have their roots in Phoenician scripts. In 765 AD, the Carolingian minuscule was established as a standard for writing and thus gave our lower-case letters their present shape. Today with Unicode we have a specification (i.e. a computing industry standard) defining the name, basic form, and encoding position of nearly every known glyph in the world.\nA type designer thus works within a framework. They interpret the essence of a letter and make decisions about design characteristics such as:\n\nSerifs: form and length of foot serif(s), head serif and ascender serif or even completely without =&gt; sans-serif;\nFont-weight: as a result of stroke weight and spacing;\nSpacing / tracking: the white area between letters and within them =&gt; size of counters;\nContrast between hairline and stem;\nStress or axis: the calligraphic angle;\nProportion: x-height and cap-height, length of ascender and descender.\n\n\nThe perfection of the imperfect\nMathematically ideal forms are perfect but boring. That is one side of the coin. The other side is that typography has to take optical effects and peculiarities of human vision into account. The overshoot of round characters, cupped serifs, tapered stems, kerning, etc. are examples of measures improving the overall impression and the legibility of type. These measures are summarized under the term microtypography. A special property has gained importance with digitization: The distinguishability of similar glyphs. A counter-example in this case is the famous Futura Paul Renner designed in 1927. Influenced by the Bauhaus ideals he reduced type to geometric elements. In his font d, p, b, and q are circles with stems that are just flipped or rotated copies of each other. The a is a d without ascender. The impression is a very reduced but somehow elegant font you can use as a display typeface in higher grades. But it definitely causes pain to read body text in Futura. You will of course find people denying that. Well, it is the sort of people who believe that the “frilled” serif antiqua is obsolete and sans-serif is the ne plus ultra.\n\n\nThe styles of Libertinus\n\n\n\nThe different styles of the Libertinus font family\n\n\nCurrently, there are six different styles of Libertinus:\nRegular and Italic have standard weight, also known as “book”. They are designed for 11pt. The Bold and Bold italic are heavier forms of the above mentioned. The Display is a special light and elegant variant for titles and headlines. Each style of Libertinus contains a subset of small capitals. The Small caps style is an extended set of the regular style.\n\n\nThe serifs of Libertinus\n #### The foot serifs\nThe figure above shows a foot serif of Libertinus. Foot serifs are the most common serifs and give shape to the lower-case f, h, i, k, l, m, n,r, and many more upper-case letters. They occur in a diagonal form in the letters k, v, w, x, and y; not only at the baseline but also at the x-height. In p and q they form the descender. In the figure, you can recognize that the serif’s thickness in the regular style and the bold style is nearly identical, i.e. 33 EM : 34 EM (see Vertical Metricsfor an explanation of the unit “EM”), while the stem in the bold style is 1.6 times fatter. Did you notice? The right half of the shown serif is a bit shorter than the opposite because it is the left serif of the n. This is an optical measure to avoid the foot serifs coming too close and narrow to the open counter. This is important for the legibility of n. Did you notice? The outer left and right parts of the serif bow down a little, giving the whole a concave form. This measure is called “cupped serif”.\n\n\n\nn as design pattern\n\n\n\nThe middle head serifs (at x-height)\nThis figure shows the head serif of n, m, r, and p. It is a characteristic of Libertinus that this serif bows to the left and opens the angle where stem and hairline join. Have a look at i and j. Their head serifs are upright and do not bow to the left. There are just no angles to open. Did you notice? The upper spline of the head serif is a bit concave. It is as “cupped” as the foot serif.\n\n\n\nThe upper head serif of l\n\n\n\n\nThe ascender serifs (at ascender height)\nThe ascender (or upper head serifs) occurs in the letters b, d, h, k, and l. They look similar to the serifs of i and j, but they are in fact not identical.\n\n\n\nThe half-serif of s\n\n\n\n\nThe half serifs\nHalf-serifs occur in the lower-case letters s and z, and at capitals such as C, G, F, L, S, T, and Z. The half-serif of the s is nearly vertical while most others are diagonal. At the point where the outer contour passes over into the serif there is a right angle; a Libertinus characteristic. Compare round letters such as C and G with rectangular ones such as F and T. In the bold style the diagonal stroke grows, but not as much as the verticals stems do. This is because the counters shrink, whereby the glyph already gains enough weight. Did you notice? The half-serif’s form is actually not cupped but even slightly convex.\n\n\n\nThe drop at the right hook terminal of f\n\n\n\n\nThe drop terminals\nThe drop occurs in the letters a, c, f, g, j, r, and y. In the bold style, the drop terminals get much heavier while the hairline does not receive such a strong growth. In the figure you will also recognize that the x-height rises about 5 EM in the bold style. Did you notice? The drops of Libertinus’ letters are oblated at the end. You will also find that the . (period) and the bulbs of , and \" are flattened. This is another characteristic of Libertinus.\n\n\n\nTwo letters as primary design patterns …\nWhen developing a font, one starts with just a few letters (or “glyphs”) and defines those as as design patterns. These are n and o in Libertinus. In reverse, modifications on them causes conflicts with all derived letters, so you better do not touch them.\n\n\n\nn as design pattern\n\n\n\n… n for letters with serifs\nThe lower-case letter n defines:\n\nthe serifs;\nthe stem width. This is 79 EM for lower-case and, derived from that, 85 EM for upper-case;\nSpacing. The inner distance between the two stems. Thus, the white space of the counter affects tracking. It is regarded as default for optical spacing between letters;\nfont-weight. An effect of stem width and tracking;\nx-height and overshoot: The body of lower-case letters is 429 EM tall. Round parts overshoot the x-height and the baseline about 10 EM. This typographic measure achieves that letters like o, e, c, but also n, m, r, etc. have the same optical height as x. In FontForge, the overshoot corridor is marked in rose color.\n\nDerived letters: m, r, h, i, j, l, u, …\n #### … o for letters with round parts The lower-case letter o defines the following characteristics for all letters with round parts:\n\nstress: the calligraphic angle;\nmin./max. width of round strokes, i.e. 35 EM for thinnest and 86 EM for boldest part of stroke;\nSpacing. The white space of the counter affects tracking. This is because the white space between glyphs (the sum of the optical bearings) shall be equal to the counter. To find the correct spacing for the glyphs is a hard piece of work;\nBearings as indication for spacing of round characters.\n\nThe right part of the figure shows a bold o with the pointed contour of the regular o on top of it. You can see that the vertical strokes grow in width while the hairline nearly stays the same. The glyph emboldens especially at the outer part and becomes wider. The strokes also gain width on the inner side of the character whereby the counter shrinks. Both, the increased stroke thickness and the shrink of the counters, result in a heavier font weight.\nDerived letters: e, c, and round parts of b, d, p, q, g, …. Please note: Derived does not simply mean “copy and paste”. When it comes to the round parts of glyphs, you will always have to modify and improve form, weight, and bearings.\n\n\n\nSecondary design patterns\nBesides the letters n and o, all basic alphabetic characters form the sets of secondary design patterns. The following table lists the Unicode ranges of secondary design patterns.\n\n\n\nAlphabet\nGlyphs\nUnicode Range\nChart\n\n\n\n\nBasic Latin (ASCII)\n0--9 A--Z a--z\n0000–007F\nPDF\n\n\nBasic Greek\nΑ--Ω α--ω\n0370–03FF\nPDF\n\n\nBasic Cyrillic\nА--Я а--я\n0400–04FF\nto do\n\n\n\n\n\nVertical metrics\n\n\n\nHeights and overshoot margins\n\n\nThe figure shows the vertical metric of Libertinus Regular. The horizontal borderlines are called “heights”. The x-height for example is the upper horizontal border of lower-case like a, c, e, …, x. Libertinus’ upper-case glyphs are a bit shorter (=&gt; caps-height) than the ascenders of the lower-case glyphs (=&gt; ascender-height). This is also true for numbers which have their own numbers-height and for small caps with their caps-height. By definition, the height of the EM square is divided into 1000 units we call “EM units” or just “EM”. Simply speaking, we are working in an Cartesian coordinate system. Have you noticed the rose colored margins? They are the overshoot-margins. As mentioned above, round glyph-parts have to overshoot the line-height to form the optical illusion of evenness.\n\n\nSpacing and tracking\n\n\n\nSpacing of letters has to base on optical assessment and has to correspond with the counter space\n\n\nWell, you have drawn a wonderful glyph and now you think that the work is done? Wrong! The spacing and finding the right tracking of a glyph is one of the major tasks. You have to check dozens of constellations of glyph pairs and have to make lots of compromises. The figure shows the counter space in blue and the inter-glyph spacing in red. The counters play an important role in tracking. The spacing and counters should be equally balanced. Remember the figure indicating the bold o? Thinner counters lead to thinner letter spacing, and thus to an increased density of the face and higher weight. Libertinus’ glyphs are already fairly well-spaced. If you want to set the spacing of a new glyph or improve the existing one, chose one of the reference characters that resembles yours and make a decision based on that.\n\n\nOvershoot and height metrics\nPlease complement description."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html#fontforge-font-editor",
    "href": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html#fontforge-font-editor",
    "title": "Libertinus design guidelines",
    "section": "FontForge font editor",
    "text": "FontForge font editor\n\n\n\no as design pattern\n\n\nLibertinus is being developed with the font editor FontForge. Binary packages are available for many Linux distributions (Ubuntu, Fedora, OpenSUSE …), macOS, and Windows. See FontForge’s project page for more information. There is also a fairly good manual: Design fonts with FontForge.\n\nThe layers\nIn the glyph view you will find a little tool-box called “layers” amongst others. The contours of Libertinus are stored in the “glyph layer”. You can use the “background layer” to store contours from another glyph for comparing certain characteristics like form, height, counter width, and such. Finally, the “guide layer” contains metrical lines such as x-height, caps-height, etc. and it is actually unique for all glyphs. So, please leave that one untouched.\n\n\nDrawing splines and contours\n\n\n\nThe four point types and drawing contours\n\n\nVector based fonts such as TTF and OTF use Bézier curves. You will know them from vector graphics editors such as Inkscape or Illustrator. FontForge knows four different point types:\n\nthe curve point (left and right handle stick together);\nthe h/v curve point (90° horizontal or vertical handles);\nthe corner point (left and right handle are independent);\nthe tangent point (the handle follows the direction of the afferent spline).\n\nYou can easily change the point type via the point menu. A right click on a point will open a context menu, allowing you to control the type and exact position of the point and its handle points.\nContours always have to be closed. Only closed contours will fill. Outer contours have to be tagged clockwise. Inner contours (forming counters) need to be tagged counter-clockwise.\n\n\nAccented glyphs\n\nWorking with references\n\n\n\nWorking with references and use of my-metrics-option\n\n\nThe latin codepages contain a lot of accented characters. These are generally nothing else but different combination of basic glyphs and accents. For example, the é is combined of e + ´. You do not need to work with copied contours in these cases. You can and should make use of a reference that points to the original glyph.\nExample: The letter i is in fact also an accented character made up of the glyphs ı (named dottlessi) and ˙ (named dotaccent). To ensure that improvements in the metrics of the referenced glyph are handed down to the derivated glyph, the checkbox “Use my metrics” has to be enabled. Nearly all imaginable kind of accents have been encoded by now. You can find them in these two Unicode charts: * Unicode-Chart Combining Diacritical Marks U+0300–U+036F * Supplement U+1DC0–U+1DFF\n\n\nBase marks and anchors\nPlease complement description."
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html#authors",
    "href": "static/fonts/Libertinus-7.051/documentation/Design-Guidelines.html#authors",
    "title": "Libertinus design guidelines",
    "section": "Authors",
    "text": "Authors\n\nGillian Tiefenlicht GillianTL"
  },
  {
    "objectID": "static/fonts/Libertinus-7.051/CONTRIBUTING.html",
    "href": "static/fonts/Libertinus-7.051/CONTRIBUTING.html",
    "title": "Contributing",
    "section": "",
    "text": "Contributing\nThe source files are under the sources subdirectory. The .sfd files are FontForge source font format and should be edited with FontForge. The .fea files are OpenType feature files and should be edited by a plain text editor.\nTo build the fonts locally, you will need to setup Fontship. Several methods are available for installation including a simple one-liner with no installation using Docker. One Fontship is setup, regenerate the fonts at any time using:\nfontship make\nA remote CI runner will also automatically run fontship for all PRs on this repository, so in some cases you may not need to install it at all. You can even download and review the fonts it builds after each push. Hovever this is cumbersome for actual font development and we recomend checking your work with local feedback.\nNote that FontForge adds unnecessary clutter to its source files on each save that must be removed before committing. After modifying the .sfd files, and before committing the changes, you can automatically clean them up with:\nfontship make normalize"
  }
]